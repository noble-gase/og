package middleware

import (
	"net/http"

	"{{.Module}}/pkg/iden"

	"github.com/noble-gase/ne/conv"
	"github.com/noble-gase/ne/helper"
	"github.com/noble-gase/ne/metadata"
)

// Iden parse identity into context
func Iden(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		token := r.Header.Get(helper.HeaderAuthorization)
		if len(token) == 0 {
			next.ServeHTTP(w, r)
			return
		}

		ctx := r.Context()
		id := iden.FromAuthToken(ctx, token)

		md, ok := metadata.FromIncomingContext(ctx)
		if !ok {
			md = metadata.Pairs()
		}
		md.Set(iden.IdenId, conv.IntToStr(id.Id))
		md.Set(iden.IdenToken, id.Token)

		next.ServeHTTP(w, r.WithContext(metadata.NewIncomingContext(ctx, md)))
	})
}
