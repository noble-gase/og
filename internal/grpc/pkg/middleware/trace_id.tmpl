package middleware

import (
	"context"
	"strings"

	"github.com/google/uuid"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

const XTraceId = "x-trace-id"

// TraceId is a middleware that injects a trace ID into the context of each request.
func TraceId(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {
	md, ok := metadata.FromIncomingContext(ctx)
	if !ok {
		md = metadata.Pairs()
	}

	// traceId
	var traceId string
	if vals := md.Get(XTraceId); len(vals) != 0 {
		traceId = vals[0]
	} else {
		traceId = strings.ReplaceAll(uuid.New().String(), "-", "")
		md.Set(XTraceId, traceId)
	}

	// set response header
	_ = grpc.SetHeader(ctx, metadata.Pairs(XTraceId, traceId))

	return handler(metadata.NewIncomingContext(ctx, md), req)
}
