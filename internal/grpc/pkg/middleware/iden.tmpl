package middleware

import (
	"context"

	"{{.Module}}/pkg/iden"

	"github.com/noble-gase/ne/conv"
	"github.com/noble-gase/ne/helper"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

func Iden(ctx context.Context, req any, _ *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {
	md, ok := metadata.FromIncomingContext(ctx)
	if !ok {
		md = metadata.Pairs()
	}

	token := md.Get(helper.HeaderAuthorization)
	if len(token) == 0 {
		return handler(ctx, req)
	}

	id := iden.FromAuthToken(ctx, token[0])
	md.Set(iden.IdenId, conv.IntToStr(id.Id))
	md.Set(iden.IdenToken, id.Token)

	return handler(metadata.NewIncomingContext(ctx, md), req)
}
