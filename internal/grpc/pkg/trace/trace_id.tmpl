package trace

import (
	"crypto/rand"
	"encoding/base64"
	"fmt"
	"os"
	"strings"
	"sync/atomic"

	"github.com/noble-gase/ne/hashes"
)

const (
	TraceId   = "x-trace-id"
	TraceHost = "hostname"
)

var (
	hostname string
	prefix   string
	sequence uint64
)

func init() {
	hostname, _ = os.Hostname()
	if len(hostname) == 0 {
		hostname = "localhost"
	}

	var (
		buf [12]byte
		b64 string
	)
	for len(b64) < 10 {
		_, _ = rand.Read(buf[:])
		b64 = base64.StdEncoding.EncodeToString(buf[:])
		b64 = strings.NewReplacer("+", "", "/", "").Replace(b64)
	}
	prefix = fmt.Sprintf("%s/%s", hostname, b64)
}

func Hostname() string {
	return hostname
}

// NewTraceId generates a new trace ID in the sequence.
func NewTraceId() string {
	seq := atomic.AddUint64(&sequence, 1)
	return hashes.MD5(fmt.Sprintf("%s-%d", prefix, seq))
}
