package code

import (
	"context"
	"fmt"

	"{{.Module}}/pkg/trace"

	"github.com/noble-gase/ne/codes"
	gcodes "google.golang.org/grpc/codes"
	"google.golang.org/grpc/metadata"
	"google.golang.org/grpc/status"
)

func Error(ctx context.Context, err error) error {
	var (
		code gcodes.Code
		text string
	)
	switch v := err.(type) {
	case codes.Code:
		code = gcodes.Code(v.Val())
		text = v.Msg()
	default:
		code = gcodes.Code(codes.Unknown.Val())
		text = codes.Unknown.Msg()
	}

	var traceId string
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vals := md.Get(trace.TraceId); len(vals) != 0 {
			traceId = vals[0]
		}
	}
	return status.Error(code, fmt.Sprintf("[%s] %s", traceId, text))
}
